#!/Users/odosmatthews/Documents/coding/pipe/sparkforge/venv38/bin/python
# # Copyright (c) 2024 Odos Matthews
# #
# # Permission is hereby granted, free of charge, to any person obtaining a copy
# # of this software and associated documentation files (the "Software"), to deal
# # in the Software without restriction, including without limitation the rights
# # to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# # copies of the Software, and to permit persons to whom the Software is
# # furnished to do so, subject to the following conditions:
# #
# # The above copyright notice and this permission notice shall be included in all
# # copies or substantial portions of the Software.
# #
# # THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# # IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# # FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# # AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# # LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# # OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# # SOFTWARE.

#
# Author: Mike McKerns (mmckerns @caltech and @uqfoundation)
# Copyright (c) 2008-2016 California Institute of Technology.
# Copyright (c) 2016-2025 The Uncertainty Quantification Foundation.
# License: 3-clause BSD.  The full license text is available at:
#  - https://github.com/uqfoundation/dill/blob/master/LICENSE
"""
display the reference paths for objects in ``dill.types`` or a .pkl file

Notes:
    the generated image is useful in showing the pointer references in
    objects that are or can be pickled.  Any object in ``dill.objects``
    listed in ``dill.load_types(picklable=True, unpicklable=True)`` works.

Examples::

    $ get_objgraph ArrayType
    Image generated as ArrayType.png
"""

import dill as pickle

# get all objects for testing
from dill import load_types

# pickle.debug.trace(True)
# import pickle


load_types(pickleable=True, unpickleable=True)
from dill import objects

if __name__ == "__main__":
    import sys

    if len(sys.argv) != 2:
        print("Please provide exactly one file or type name (e.g. 'IntType')")
        msg = "\n"
        for objtype in list(objects.keys())[:40]:
            msg += objtype + ", "
        print(msg + "...")
    else:
        objtype = str(sys.argv[-1])
        try:
            obj = objects[objtype]
        except KeyError:
            obj = pickle.load(open(objtype, "rb"))
            import os

            objtype = os.path.splitext(objtype)[0]
        try:
            import objgraph

            objgraph.show_refs(obj, filename=objtype + ".png")
        except ImportError:
            print("Please install 'objgraph' to view object graphs")


# EOF
