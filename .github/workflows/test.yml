name: Tests

on:
  push:
    branches: [ main, develop, feature/* ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Set up Java 11
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '11'

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov pytest-xdist mypy black isort ruff bandit hypothesis

    - name: Run unit tests
      run: |
        python -m pytest tests/unit/ -v --cov=sparkforge --cov-report=xml --cov-report=term-missing

    - name: Run integration tests
      run: |
        python -m pytest tests/integration/ -v --cov=sparkforge --cov-report=xml --cov-report=term-missing

    - name: Run system tests
      run: |
        python -m pytest tests/system/ -v --cov=sparkforge --cov-report=xml --cov-report=term-missing

    - name: Run all tests with coverage
      run: |
        python -m pytest tests/ -v --cov=sparkforge --cov-report=xml --cov-report=html --cov-report=term-missing

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  quality:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.8
      uses: actions/setup-python@v4
      with:
        python-version: 3.8

    - name: Set up Java 11
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov pytest-xdist mypy black isort ruff bandit hypothesis

    - name: Run type checking
      run: |
        mypy sparkforge/ --ignore-missing-imports

    - name: Run linting
      run: |
        ruff check sparkforge/ tests/

    - name: Run formatting check
      run: |
        black --check sparkforge/ tests/
        isort --check-only sparkforge/ tests/

    - name: Run security check
      run: |
        bandit -r sparkforge/ -f json -o bandit-report.json || true

  build:
    runs-on: ubuntu-latest
    needs: [test, quality]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.8
      uses: actions/setup-python@v4
      with:
        python-version: 3.8

    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine

    - name: Build package
      run: |
        python -m build

    - name: Check package
      run: |
        twine check dist/*

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: dist
        path: dist/
