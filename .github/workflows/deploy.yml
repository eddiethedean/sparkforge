name: Deploy

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to deploy (e.g., 0.8.0)'
        required: true
        default: '0.8.0'

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: github.ref_type == 'tag' || github.event_name == 'workflow_dispatch'
    
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.8
      uses: actions/setup-python@v4
      with:
        python-version: 3.8

    - name: Set up Java 11
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .
        pip install build twine

    - name: Run tests before deployment
      run: |
        python -m pytest tests/ -v --tb=short

    - name: Run quality checks
      run: |
        mypy sparkforge/ --ignore-missing-imports
        ruff check sparkforge/ tests/
        black --check sparkforge/ tests/
        isort --check-only sparkforge/ tests/

    - name: Build package
      run: |
        python -m build

    - name: Check package
      run: |
        twine check dist/*

    - name: Publish to PyPI
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        twine upload dist/*

    - name: Create GitHub Release
      if: github.ref_type == 'tag'
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: |
          ## SparkForge ${{ github.ref }}
          
          ### What's New
          - Performance improvements
          - Bug fixes
          - Enhanced testing infrastructure
          
          ### Installation
          ```bash
          pip install sparkforge==${{ github.ref_name }}
          ```
          
          ### Documentation
          - [Getting Started](https://github.com/eddiethedean/sparkforge/blob/main/docs/getting_started.rst)
          - [API Reference](https://github.com/eddiethedean/sparkforge/blob/main/docs/api_reference.rst)
          
          ### Changes
          See the [CHANGELOG](https://github.com/eddiethedean/sparkforge/blob/main/CHANGELOG.md) for detailed changes.
        draft: false
        prerelease: false

    - name: Create GitHub Release (Manual)
      if: github.event_name == 'workflow_dispatch'
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ github.event.inputs.version }}
        release_name: Release v${{ github.event.inputs.version }}
        body: |
          ## SparkForge v${{ github.event.inputs.version }}
          
          ### What's New
          - Performance improvements
          - Bug fixes
          - Enhanced testing infrastructure
          
          ### Installation
          ```bash
          pip install sparkforge==${{ github.event.inputs.version }}
          ```
          
          ### Documentation
          - [Getting Started](https://github.com/eddiethedean/sparkforge/blob/main/docs/getting_started.rst)
          - [API Reference](https://github.com/eddiethedean/sparkforge/blob/main/docs/api_reference.rst)
          
          ### Changes
          See the [CHANGELOG](https://github.com/eddiethedean/sparkforge/blob/main/CHANGELOG.md) for detailed changes.
        draft: false
        prerelease: false

    - name: Notify deployment success
      if: success()
      run: |
        echo "✅ Deployment successful!"
        echo "Version: ${{ github.ref_name || github.event.inputs.version }}"
        echo "Package uploaded to PyPI"
        echo "GitHub Release created"

    - name: Notify deployment failure
      if: failure()
      run: |
        echo "❌ Deployment failed!"
        echo "Check the logs above for details"
